syntax = "proto3";
import "multiformats.proto";
import "solidity.proto";
package p2p;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

message ProtocolMessage {
  oneof message {
    LeaseProposal lease_proposal = 1;
    LeaseRejection lease_rejection = 2;
    ChallengeRequest challenge_request = 3;
    ChallengeResponse challenge_response = 4;
    RetrieveRequest retrieve_request = 5;
    RetrieveDelivery retrieve_delivery = 6;
  }
}

message RetrieveRequest {
  uint64 nonce = 1;
}

message RetrieveDelivery {
  uint64 nonce = 1;
  bytes data = 1000;
}

message LeaseProposal {
  message LeaseTerms {
    solidity.Address token_address = 1;
    solidity.Uint256 price = 2;
    solidity.Uint256 penalty = 3;
    google.protobuf.Timestamp proposal_expiration = 4;
    google.protobuf.Duration lease_duration = 5;
  }

  uint64 nonce = 1;
  LeaseTerms lease_terms = 2;
  bytes signature = 500;
  bytes data = 1000;
}

message LeaseRejection {
  uint64 nonce = 1;
  string reason = 2;
}

message ChallengeRequest {
  uint64 nonce = 1;
  uint32 block_number = 2;
}

message ChallengeResponse {
  uint64 nonce = 1;
  uint32 block_number = 2;
  bytes block_data = 3;
  // TODO H256 is specific to one hash function
  repeated solidity.H256 proof = 4;
}
